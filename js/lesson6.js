//! –ü—Å–µ–≤–¥–æ–º–∞—Å–∏–≤ arguments & Arry.from*/
//* –î–æ—Å—Ç—É–ø –¥–æ —Å–ø–∏—Å–∫—É –≤—Å—ñ—Ö –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ –º–æ–∂–Ω–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—ó –∑–º—ñ–Ω–Ω–æ—ó arguments. –ö–æ–ª–∏ —Ç–∏ –≤–∏–∫–ª–∏–∫–∞—î—à —Ñ—É–Ω–∫—Ü—ñ—é –∑ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏, arguments –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —Ü—ñ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó —ñ –∑–∞–ø–æ–≤–Ω—é—î—Ç—å—Å—è –ø–µ—Ä–µ–¥–∞–Ω–∏–º–∏ –∑–Ω–∞—á–µ–Ω–Ω—è–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤.
//* –ü—Ä–∏–∫–ª–∞–¥:
function sum(a, b) {
  console.log(arguments);
  return a + b;
}

sum(2, 5); //–£ —Ü—å–æ–º—É –ø—Ä–∏–∫–ª–∞–¥—ñ –ø—Ä–∏ –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó sum(2, 5) –∑–±–µ—Ä—É—Ç—å—Å—è –≤—Å—ñ –ø–µ—Ä–µ–¥–∞–Ω—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ (—á–∏—Å–ª–∞ 2 —ñ 5) —ñ –∑–∞–ø–∏—à—É—Ç—å—Å—è —è–∫ –µ–ª–µ–º–µ–Ω—Ç–∏ –∫–æ–ª–µ–∫—Ü—ñ—ó –ø—Å–µ–≤–¥–æ–º–∞—Å–∏–≤—É arguments.
//*–¶—è –∫–æ–ª–µ–∫—Ü—ñ—è —Å—Ö–æ–∂–∞ –Ω–∞ –º–∞—Å–∏–≤, –∞–ª–µ –Ω–∞—Å–ø—Ä–∞–≤–¥—ñ —î –ø—Å–µ–≤–¥–æ–º–∞—Å–∏–≤–æ–º, —Ç–æ–±—Ç–æ:
/*—É –Ω–µ—ó —î –¥–µ—è–∫—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –º–∞—Å–∏–≤—ñ–≤, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ length;
/*—É –Ω–µ—ó —î –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –¥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –∑–∞ —ñ–Ω–¥–µ–∫—Å–æ–º;
/*—É –Ω–µ—ó –Ω–µ–º–∞—î –º–µ—Ç–æ–¥—ñ–≤ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –º–∞—Å–∏–≤–æ–º;
—ó—ó –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–±–∏—Ä–∞—Ç–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Ü–∏–∫–ª—ñ–≤.*/

function foo() {
  const arr = Array.from(arguments); //! –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Å—É—Ç–Ω–æ—Å—Ç—ñ Array.from –º–æ–∂–Ω–∞ –ø–µ—Ä–µ—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Å–µ–≤–¥–æ–º–∞—Å–∏–≤ –≤ –º–∞—Å–∏–≤.*/
  console.log(Array.isArray(arguments)); //! –ú–µ—Ç–æ–¥ isArray - –ø–µ—Ä–µ–≤—ñ—Ä—è—î —á–∏ –∞—Ä–≥—É–º–µ–Ω—Ç —î –º–∞—Å–∏–≤–æ–º, —Ç–∞ –ø–æ–≤–µ—Ä—Ç–∞—î –±—É–ª–µ–≤–∏–π –≤–∏—Ä–∞–∑ true or false. */
  console.log("arr", Array.isArray(arr)); // arr true
  // console.log(typeOf Array): - –Ω–µ –ø—Ä–∞—Ü—é—î –≤ –¥–∞–Ω–æ–º—É –≤–∏–ø–∞–¥–∫—É –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Ç–∏–ø—É –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤–ñ*/
}
foo(1, 2, 3);
foo(10, 11, 12, 13, 14);

//* –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é add –¥–ª—è —Å–∫–ª–∞–¥–∞–Ω–Ω—è –¥–æ–≤—ñ–ª—å–Ω–æ—ó –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ (—á–∏—Å–µ–ª).*/

// const add = function () {}; // –º–µ—Ç–æ–¥ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–∞–∑–∏–≤–∞—î—Ç—å—Å—è function expretion
// add();

function name(params) {} //-–º–µ—Ç–æ–¥ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó funtion declaration
//* —Ä—ñ–∑–Ω–∏—Ü—è –ø–æ–ª—è–≥–∞—î –≤ —Ç–æ–º—É —â–æ –º–µ—Ç–æ–¥ funtion declaration –¥–æ–∑–≤–æ–ª—è—î –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é —è–∫ –¥–æ —ó—ó –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —Ç–∞–∫ —ñ –ø—ñ—Å–ª—è, –Ω–∞ –≤–¥–º—ñ–Ω—É –ø—Ä–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –º–µ—Ç–æ–¥–æ–º function expretion –≤–∏–∫–ª–∏–∫–∞—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é –º–æ–∂–ª–∏–≤–æ –ª–∏—à–µ –ø—ñ—Å–ª—è —ó—ó –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è.*/

const add = function () {
  const arr = Array.from(arguments);
  let total = 0;

  for (const item of arr) {
    total += item;
  }
  return total;
};
add(1, 2, 3); //6
add(10, 20, 30, 4, 5); //69
//* –ø–µ—Ä–µ–¥–∞—î–º–æ –≤ –Ω–∞—à—É —Ñ—É–Ω–∫—Ü—ñ—é –Ω–µ—Ñ—ñ–∫—Å–æ–≤–∞–Ω—É –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —ñ –¥–ª—è —Ü—å–æ–≥–æ –º–æ–∂–µ–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –Ω–∞—à—É —Å—É—Ç–Ω—ñ—Å—Ç—å arguments

//* –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é calAverage() —è–∫–∞ –ø—Ä–∏–π–º–∞—î –¥–æ–≤—ñ–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —ó—Ö —Å–µ—Ä–µ–¥–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è. –£—Å—ñ –∞—Ä–≥—É–º–µ–Ω—Ç–∏ –±—É–¥—É—Ç—å –ª–∏—à–µ —á–∏—Å–ª–∞–º–∏.*/

function calAverage() {
  let total = 0;
  for (let i = 0; i < arguments.length; i++) {
    total += arguments[i];
  }
  return total / arguments.length;
}

console.log(calAverage(1, 2, 3)); //2
console.log(calAverage(10, 12, 31, 5)); //14.5
console.log(calAverage(1, 2, 4, 7, 9, 10)); //8.5
//* –¶—é –∑–∞–¥–∞—á—É –≤–∏—Ä—ñ—à–∏–ª–∏ –±–µ–∑ –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Å–µ–≤–¥–æ–º–∞—Å–∏–≤—É –≤ –º–∞—Å–∏–≤. */

//!–û–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ */
//* –û–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ - —Ü–µ —á–∞—Å—Ç–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∏, –≤ —è–∫—ñ–π –∑–º—ñ–Ω–Ω–∞ –∞–±–æ —Ñ—É–Ω–∫—Ü—ñ—è –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è. –í–æ–Ω–∞ –≤–∏–∑–Ω–∞—á–∞—î, –¥–µ –∑–º—ñ–Ω–Ω–∞ –∞–±–æ —Ñ—É–Ω–∫—Ü—ñ—è –º–æ–∂–µ –±—É—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –∫–æ–¥—ñ. –£ JavaScript —ñ—Å–Ω—É—î –¥–≤—ñ –æ—Å–Ω–æ–≤–Ω—ñ –æ–±–ª–∞—Å—Ç—ñ –≤–∏–¥–∏–º–æ—Å—Ç—ñ: –≥–ª–æ–±–∞–ª—å–Ω–∞ —Ç–∞ –ª–æ–∫–∞–ª—å–Ω–∞.
 *
//*–ì–ª–æ–±–∞–ª—å–Ω–∞ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ - —Ü–µ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ, —è–∫–∞ –æ—Ö–æ–ø–ª—é—î –≤–µ—Å—å –∫–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–∏. –ó–º—ñ–Ω–Ω—ñ —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—ó, –æ –≥–æ–ª–æ—à–µ–Ω—ñ –≤ –≥–ª–æ–±–∞–ª—å–Ω—ñ–π –æ–±–ª–∞—Å—Ç—ñ –≤–∏–¥–∏–º–æ—Å—Ç—ñ, –¥–æ—Å—Ç—É–ø–Ω—ñ –∑ –±—É–¥—å-—è–∫–æ—ó —á–∞—Å—Ç–∏–Ω–∏ –ø—Ä–æ–≥—Ä–∞–º–∏.
 *
 //* –õ–æ–∫–∞–ª—å–Ω–∞ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ - —Ü–µ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ, —è–∫–∞ –æ–±–º–µ–∂–µ–Ω–∞ –ø–µ–≤–Ω–æ—é —Ñ—É–Ω–∫—Ü—ñ—î—é –∞–±–æ –±–ª–æ–∫–æ–º –∫–æ–¥—É. –ó–º—ñ–Ω–Ω—ñ —Ç–∞ —Ñ—É–Ω–∫—Ü—ñ—ó, –æ–≥–æ–ª–æ—à–µ–Ω—ñ –≤ –ª–æ–∫–∞–ª—å–Ω—ñ–π –æ–±–ª–∞—Å—Ç—ñ –≤–∏–¥–∏–º–æ—Å—Ç—ñ, –¥–æ—Å—Ç—É–ø–Ω—ñ —Ç—ñ–ª—å–∫–∏ –≤ –º–µ–∂–∞—Ö —Ü—ñ—î—ó —Ñ—É–Ω–∫—Ü—ñ—ó –∞–±–æ –±–ª–æ–∫—É –∫–æ–¥—É.
 *
 //*–£ JavaScript —ñ—Å–Ω—É—î —Ç—Ä–∏ —Ç–∏–ø–∏ –ª–æ–∫–∞–ª—å–Ω–æ—ó –æ–±–ª–∞—Å—Ç—ñ –≤–∏–¥–∏–º–æ—Å—Ç—ñ:
 *
 * 1. –§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω–∞ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ
 * 2. –ë–ª–æ—á–Ω–∞ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ
 * 3. –ì–ª–æ–±–∞–ª—å–Ω–∞ –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç—ñ

const str = "Hello"; // –≥–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞- –∑–º—ã–Ω–Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞ –∑–∞ –º–µ–∂–∞–º–∏ —Ñ—É–Ω–∫—Ü—ñ—ó, –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±—É–¥—å-—è–∫—ñ–π —á–∞—Å—Ç–∏–Ω—ñ –ø—Ä–æ–≥—Ä–∞–º–∏*/
// const str = "Hello";
// function foo() {
//   const msg = "World"; // –ª–æ–∫–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞- –∑–º—ã–Ω–Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞ –≤ —Ç—ñ–ª—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –≤ —Ç—ñ–ª—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
//   console.log(msg); // World
//   function lalala() {
//     const a = "lalala"; // –ª–æ–∫–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞- –∑–º—ã–Ω–Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞ –≤ —Ç—ñ–ª—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç—ñ–ª—å–∫–∏ –≤ —Ç—ñ–ª—ñ —Ñ—É–Ω–∫—Ü—ñ—ó
//     console.log(a); // lalala
//     console.log(msg);//

//   }
//   console.log(a);

// }
// foo(); // World
// console.log(msg);// ReferenceError: msg is not defined
// // msg - ReferenceError: msg is not defined
// console.log(a); // ReferenceError: a is not defined

//* –°—Ç–µ–∫ –≤–∏–∫–ª–∏–∫—ñ–≤
//* –ü–æ—Ä—è–¥–æ–∫ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è

//* –ü—ñ–¥ —á–∞—Å –≤–∏–∫–ª–∏–∫—É —Ñ—É–Ω–∫—Ü—ñ—ó –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ —ó—ó —Ç—ñ–ª–∞ –º–æ–∂—É—Ç—å –≤–∏–∫–ª–∏–∫–∞—Ç–∏—Å—è —ñ–Ω—à—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, –∞ –≤ –Ω–∏—Ö —ñ–Ω—à—ñ —Ç–æ—â–æ.

//! JavaScript ‚Äî –æ–¥–Ω–æ–ø–æ—Ç–æ–∫–æ–≤–∞ –º–æ–≤–∞, —Ç–æ–±—Ç–æ –≤ –æ–¥–Ω—É –æ–¥–∏–Ω–∏—Ü—é —á–∞—Å—É –º–æ–∂–µ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—è —Ç—ñ–ª—å–∫–∏ –æ–¥–Ω–∞ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è. –¶–µ –æ–∑–Ω–∞—á–∞—î, —â–æ –≤–∂–µ –≤–∏–∫–ª–∏–∫–∞–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, —è–∫—ñ –Ω–µ –∑–∞–∫—ñ–Ω—á–∏–ª–∏ —Å–≤–æ—î –≤–∏–∫–æ–Ω–∞–Ω–Ω—è, –ø–æ–≤–∏–Ω–Ω—ñ —á–µ–∫–∞—Ç–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ–π, –≤–∏–∫–ª–∏–∫–∞–Ω–∏—Ö —É—Å–µ—Ä–µ–¥–∏–Ω—ñ —Å–µ–±–µ, –¥–ª—è —Ç–æ–≥–æ —â–æ–± –ø—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ —Å–≤–æ—é —Ä–æ–±–æ—Ç—É.
function fnA() {
  console.log("Log inside fnA function before calling fnB");
  fnB();
  console.log("Log inside fnA function after fnB call");
}

function fnB() {
  console.log("Log inside fnB function");
}

console.log("Log before calling fnA");
fnA();
console.log("Log after calling fnA");

// "Log before calling fnA"
// "Log inside fnA function before calling fnB"
// "Log inside fnB function"
// "Log inside fnA function after fnB call"
// "Log after calling fnA"

//* –°—Ç–µ–∫ –≤–∏–∫–ª–∏–∫—ñ–≤ (call stack) ‚Äî —Ü–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–∏—Ö, —è–∫–∞ –¥–æ–ø–æ–º–∞–≥–∞—î —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä—É –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å —ñ —Å—Ç–∞–Ω –≤–∏–∫–ª–∏–∫—ñ–≤ —Ñ—É–Ω–∫—Ü—ñ–π —É –ø—Ä–æ–≥—Ä–∞–º—ñ. –í—ñ–Ω –ø–æ–∫–∞–∑—É—î, —è–∫–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞—Ä–∞–∑ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è —ñ —è–∫–∞ –±—É–¥–µ –≤–∏–∫–ª–∏–∫–∞–Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–æ—é.
//! –°—Ç–µ–∫ –≤–∏–∫–ª–∏–∫—ñ–≤ (call stack) ‚Äî —Ü–µ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–∏—Ö, —è–∫–∞ –¥–æ–ø–æ–º–∞–≥–∞—î —ñ–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä—É –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å —ñ —Å—Ç–∞–Ω –≤–∏–∫–ª–∏–∫—ñ–≤ —Ñ—É–Ω–∫—Ü—ñ–π —É –ø—Ä–æ–≥—Ä–∞–º—ñ. –í—ñ–Ω –ø–æ–∫–∞–∑—É—î, —è–∫–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∑–∞—Ä–∞–∑ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è —ñ —è–∫–∞ –±—É–¥–µ –≤–∏–∫–ª–∏–∫–∞–Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–æ—é.
function bar() {
  console.log("bar");
}

function baz() {
  console.log("baz");
}

function foo() {
  console.log("foo");
  bar();
  baz();
}

foo();

/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é logItems(items), —è–∫–∞ –æ—Ç—Ä–∏–º—É—î –º–∞—Å–∏–≤ —Ç–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î —Ü–∏–∫–ª,
 * —è–∫–∏–π –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –±—É–¥–µ –≤–∏–≤–æ–¥–∏—Ç–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É
 * —Ñ–æ—Ä–º–∞—Ç—ñ <–Ω–æ–º–µ—Ä –µ–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–Ω—è –µ–ª–µ–º–µ–Ω—Ç–∞>. –ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
 * –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.
 *
 * –ù–∞–ø—Ä–∏–∫–ª–∞–¥ –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É ['Mango', 'Poly', 'Ajax'] –∑
 * —ñ–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ –≤–∏–≤–µ–¥–µ–Ω–æ 1 - Mango, –∞ –¥–ª—è —ñ–Ω–¥–µ–∫—Å—É 2 –≤–∏–≤–µ–¥–µ 3 - Ajax.
 */


// function logItems(items) {
//     for(let i = 0; i < items.length; i++) {
//         console.log(`${i + 1} - ${items[i]}`)
//     }
// }



// logItems(["Mango", "Poly", "Ajax"]);
// logItems(["üçé", "üçá", "üçë", "üçå", "üçã"]);





/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é printInfo(names, phones) —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å
 * —É –∫–æ–Ω—Å–æ–ª—å —ñ–º'—è —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏–π –Ω–æ–º–µ—Ä –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞. –£ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
 * names —Ç–∞ phones –±—É–¥—É—Ç—å –ø–µ—Ä–µ–¥–∞–Ω—ñ —Ä—è–¥–∫–∏ —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–∏—Ö –Ω–æ–º–µ—Ä—ñ–≤,
 * —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –∫–æ–º–∞–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤–∏–π –Ω–æ–º–µ—Ä —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤ —É —Ä—è–¥–∫–∞—Ö
 * –≤–∫–∞–∑—É—é—Ç—å –Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å. –ö—ñ–ª—å–∫—ñ—Å—Ç—å —ñ–º–µ–Ω —Ç–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—ñ–≤
 * –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ –æ–¥–Ω–∞–∫–æ–≤–∞.
 */


// function printInfo(names, phones) {
//     const namesArr = names.split(",");
//     const phonesArr = phones.split(",");

//     for(let i = 0; i < namesArr.length; i++) {
//         console.log(namesArr[i], phonesArr[i]);
//     }
// }

// printInfo(
//     "Jacob,William,Solomon,Artemis",
//     "89001234567,89001112233,890055566377,890055566300"
//   );

// printInfo(
//     "Alice,Petya,Yura,Katya",
//     "01,02,03,04"
//   );







/**
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü—ñ—é formatTime(totalMinutes) —è–∫–∞ –ø–µ—Ä–µ–≤–µ–¥–µ –∑–Ω–∞—á–µ–Ω–Ω—è
 * totalMinutes (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤–∏–ª–∏–Ω) —É —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –≥–æ–¥–∏–Ω
 * —Ç–∞ —Ö–≤–∏–ª–∏–Ω HH:MM.
 */

// function formatTime(totalMinutes) {
//     const hours = Math.floor(totalMinutes / 60);
//     const minutes = totalMinutes % 60;

//     const doubleHours = String(hours).padStart(2, 0);
//     const doubleMinutes = String(minutes).padStart(2, 0);
//     return `${doubleHours}:${doubleMinutes}`;
// }


// console.log(formatTime(70))
// console.log(formatTime(460))
// console.log(formatTime(1441






